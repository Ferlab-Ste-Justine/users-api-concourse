groups:
  - name: multi-branch
    jobs:
      - set-feature-pipelines
  - name: main
    jobs:
      - build-and-publish
      - publish
  - name: pull-request
    jobs:
      - test-pr

resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource
- name: git-branches
  type: registry-image
  source:
    repository: aoldershaw/git-branches-resource

resources:
- name: feature-branches
  type: git-branches
  source:
    uri: git@github.com:Ferlab-Ste-Justine/users-api-concourse.git
    private_key: ((private-repo-key))
    # The "(?P<name>pattern)" syntax defines a named capture group.
    # aoldershaw/git-branches-resource emits the value of each named capture
    # group under the `groups` key.
    #
    # e.g. feature/some-feature ==> {"groups": {"feature": "some-feature"}}
    branch_regex: 'feature/(?P<feature>.*)'
    # branch_regex: release/(?P<version_minor>\d+\.\d+)\.x

- name: pull-request
  type: pull-request
  check_every: 1m
  webhook_token: ((webhook-token))
  source:
    base_branch: main
    repository: Ferlab-Ste-Justine/users-api-concourse
    access_token: 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

- name: git-users-api
  type: git
  icon: github
  check_every: 30s
  webhook_token: ((webhook-token))
  source:
    uri: git@github.com:Ferlab-Ste-Justine/users-api-concourse.git
    branch: feature/test-issam
    private_key: ((private-repo-key))
    ignore_paths: [ci/]

- name: git-tag-users-api
  type: git
  icon: github
  check_every: 30s
  source:
    uri: git@github.com:Ferlab-Ste-Justine/users-api-concourse.git
    branch: {{branch}}
    private_key: ((private-repo-key))
    tag_regex: v[0-9]+\.[0-9]+\.[0-9]+
    tag_filter: v*
    # ignore_paths: [ci/]

- name: img-users-api
  type: registry-image
  icon: docker
  source:
    username: ((docker.username))
    password: ((docker.password))
    repository: ferlabcrsj/concourse-demo
    tag: latest

- name: img-users-api-tag
  type: docker-image
  icon: docker
  source:
    username: ((docker.username))
    password: ((docker.password))
    repository: ferlabcrsj/concourse-demo

jobs:
- name: set-feature-pipelines
  plan:
  - in_parallel:
    - get: feature-branches
      trigger: true
    - get: git-users-api
  - load_var: branches
    file: feature-branches/branches.json
  - across:
    - var: branch
      values: ((.:branches))
    set_pipeline: dev
    file: git-tag-users-api/ci/multi-branch/template.yml
    instance_vars: {feature: ((.:branch.groups.feature))}
    vars: {branch: ((.:branch.name))}





- name: publish
  serial_groups: [version]
  plan:
  - get: git-tag-users-api
    trigger: true
  - task: prep-for-tag
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: concourse/git-resource
      inputs:
        - name: git-tag-users-api
      run:
        path: sh
        args:
        - -c
        - |
          cd git-tag-users-api
          tag=`cat .git/ref`
          git rev-list -n 1 $tag > sha   
      outputs:
        - name: git-tag-users-api
  - load_var: tag
    file: git-tag-users-api/sha
  - put: img-users-api-tag
    inputs: ["git-tag-users-api"]
    params:    
      pull_repository: ferlabcrsj/concourse-demo
      pull_tag: ((.:tag))
      tag_file: git-tag-users-api/.git/ref
      
- name: test-pr
  plan:
  - get: pull-request
    trigger: true
    version: every
  - put: pull-request
    params:
      path: pull-request
      status: pending
      context: test
    get_params:
      integration_tool: checkout
  - task: unit-test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: alpine/git, tag: "latest"}
      inputs:
        - name: pull-request
      run:
        path: /bin/sh
        args:
          - -xce
          - |
            cd pull-request
            git log --graph --all --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s" > log.txt
            cat log.txt
  on_failure:
    do: 
      - put: pull-request
        params:
          path: pull-request
          status: failure
          context: test
  on_success:
    do: 
      - put: pull-request
        params:
          path: pull-request
          status: success
          context: test
  on_abort:
    do: 
      - put: pull-request
        params:
          path: pull-request
          status: error
          context: test
  on_error:
    do: 
      - put: pull-request
        params:
          path: pull-request
          status: error
          context: test
  # - put: pull-request
  #   params:
  #     path: pull-request
  #     status: success

- name: build-and-publish
  # serial_groups: [version]
  plan:
  - get: git-users-api
    trigger: true
  - task: prepare-image
    # file: git-users-api/ci/tasks/prepare-image.yml
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: concourse/git-resource
      inputs:
        - name: git-users-api
      outputs:
        - name: output
      run:
        path: bash
        args:
        - -c
        - |
          ROOT_FOLDER=$(pwd)

          cp -R ${ROOT_FOLDER}/git-users-api/* ${ROOT_FOLDER}/output
          rm -fr ${ROOT_FOLDER}/output/ci && rm -fr ${ROOT_FOLDER}/output/.git

          pushd git-users-api
              VERSION=`echo "$(git rev-parse --short HEAD)-$(date +'%s')"`
          popd

          echo "${VERSION}" > ${ROOT_FOLDER}/output/version
  - task: build-image
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: concourse/oci-build-task
      inputs:
      # Source including Dockerfile
      - name: git-users-api
        path: .
      # Output from prepare image
      - name: output
        path: .
      outputs:
      - name: image
      run:
        path: build
  - put: img-users-api
    params:
      # Path is from above output and image.tar is the default name
      image: image/image.tar
      additional_tags: output/version
  - put: img-users-api
    params:
      image: image/image.tar
      additional_tags: git-users-api/.git/ref

